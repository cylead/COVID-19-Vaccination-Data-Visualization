<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (vaccination_countries)' inline='true' name='federated.0u5d0ty1d9fr0f195v4p40draon0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='vaccination_countries' name='excel-direct.0w9cr0q1nlsguy1b34tq70j4ht8h'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/job/project/covid19/data/for_tableau/vaccination_countries.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0w9cr0q1nlsguy1b34tq70j4ht8h' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D223:no:A1:D223:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='2' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0w9cr0q1nlsguy1b34tq70j4ht8h' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:D223:no:A1:D223:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='real' name='total_vaccinations_per_hundred' ordinal='2' />
            <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='3' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:D223:no:A1:D223:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A60C52CD544947C49A343CE679F99057]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A60C52CD544947C49A343CE679F99057]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A60C52CD544947C49A343CE679F99057]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_A60C52CD544947C49A343CE679F99057]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_A60C52CD544947C49A343CE679F99057]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
        <semantic-values semantic-role='[Country].[Name]'>
          <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Federated States of Micronesia&quot;' />
          <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
          <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
        </semantic-values>
      </column>
      <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
      <column caption='Total Vaccinations Per Hundred' datatype='real' name='[total_vaccinations_per_hundred]' role='measure' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_A60C52CD544947C49A343CE679F99057'>
            <properties context=''>
              <relation connection='excel-direct.0w9cr0q1nlsguy1b34tq70j4ht8h' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:D223:no:A1:D223:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='real' name='total_vaccinations_per_hundred' ordinal='2' />
                  <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='3' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (vaccination_time_series_eu)' inline='true' name='federated.1qymhio1qy07tx1c3y6lu0tpuxto' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='vaccination_time_series_eu' name='excel-direct.1idev970x3v9qb18gnjvq1gxs9uo'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/job/project/covid19/data/for_tableau/vaccination_time_series_eu.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.1idev970x3v9qb18gnjvq1gxs9uo' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:F9623:no:A1:F9623:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='3' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='4' />
            <column datatype='integer' name='population' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.1idev970x3v9qb18gnjvq1gxs9uo' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:F9623:no:A1:F9623:0' header='yes' outcome='6'>
            <column datatype='string' name='continent' ordinal='0' />
            <column datatype='string' name='location' ordinal='1' />
            <column datatype='date' name='date' ordinal='2' />
            <column datatype='integer' name='new_vaccinations_smoothed' ordinal='3' />
            <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='4' />
            <column datatype='integer' name='population' ordinal='5' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations_smoothed_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new_vaccinations_smoothed_per_million]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>new_vaccinations_smoothed_per_million</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F9623:no:A1:F9623:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_63A4BCC921D24BBC987D692CDB47F613]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
      <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[new_vaccinations_smoothed_per_million]' derivation='Sum' name='[sum:new_vaccinations_smoothed_per_million:qk]' pivot='key' type='quantitative' />
      <column-instance column='[new_vaccinations_smoothed_per_million]' derivation='Sum' name='[sum:new_vaccinations_smoothed_per_million:vtavg:qk]' pivot='key' type='quantitative' visual-totals='Avg' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]&#10;[:Measure Names]' type='palette'>
            <map to='#4878a6'>
              <multibucket>
                <bucket>&quot;Austria&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#4878a6'>
              <multibucket>
                <bucket>&quot;Austria&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Austria&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Austria&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Austria&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Belgium&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Belgium&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Belgium&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Belgium&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Belgium&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Croatia&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Croatia&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Croatia&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Croatia&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Croatia&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Czechia&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Czechia&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Czechia&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Czechia&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Czechia&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Finland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Finland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Finland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Finland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Finland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;France&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Germany&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Greece&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Greece&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Greece&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Greece&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Greece&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Italy&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Lithuania&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Lithuania&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Lithuania&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Lithuania&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Lithuania&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Netherlands&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Netherlands&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Netherlands&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Netherlands&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Netherlands&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Norway&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Norway&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Norway&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Norway&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Norway&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Poland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Poland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Poland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Poland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Poland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Spain&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Spain&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Spain&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Spain&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Spain&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Sweden&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Sweden&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Sweden&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Sweden&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Sweden&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Switzerland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:Calculation_995858469765484548:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Switzerland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469763555330:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Switzerland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:Calculation_995858469765308419:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Switzerland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]&quot;</bucket>
              </multibucket>
            </map>
            <map to='#acb0b1'>
              <multibucket>
                <bucket>&quot;Switzerland&quot;</bucket>
                <bucket>&quot;[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:vtavg:qk]&quot;</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:location:nk]' palette='tableau10_10_0' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Jersey&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vatican&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_63A4BCC921D24BBC987D692CDB47F613'>
            <properties context=''>
              <relation connection='excel-direct.1idev970x3v9qb18gnjvq1gxs9uo' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:F9623:no:A1:F9623:0' header='yes' outcome='6'>
                  <column datatype='string' name='continent' ordinal='0' />
                  <column datatype='string' name='location' ordinal='1' />
                  <column datatype='date' name='date' ordinal='2' />
                  <column datatype='integer' name='new_vaccinations_smoothed' ordinal='3' />
                  <column datatype='integer' name='new_vaccinations_smoothed_per_million' ordinal='4' />
                  <column datatype='integer' name='population' ordinal='5' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='Sheet1 (selected_avg)' inline='true' name='federated.08wnq260jfotwd18s4oj11dsq9xo' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='selected_avg' name='excel-direct.00w78b315wtdtx1933nzn00bg8ad'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/job/project/COVID-19-Vaccination-Data-Visualization/data/for_tableau/selected_avg.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.00w78b315wtdtx1933nzn00bg8ad' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:R192:no:A1:R192:0' header='yes' outcome='2'>
            <column datatype='date' name='Day of Date' ordinal='0' />
            <column datatype='integer' name='1' ordinal='1' />
            <column datatype='integer' name='2' ordinal='2' />
            <column datatype='integer' name='3' ordinal='3' />
            <column datatype='integer' name='4' ordinal='4' />
            <column datatype='integer' name='5' ordinal='5' />
            <column datatype='integer' name='6' ordinal='6' />
            <column datatype='integer' name='7' ordinal='7' />
            <column datatype='integer' name='8' ordinal='8' />
            <column datatype='integer' name='9' ordinal='9' />
            <column datatype='integer' name='10' ordinal='10' />
            <column datatype='integer' name='11' ordinal='11' />
            <column datatype='integer' name='12' ordinal='12' />
            <column datatype='integer' name='13' ordinal='13' />
            <column datatype='integer' name='14' ordinal='14' />
            <column datatype='integer' name='15' ordinal='15' />
            <column datatype='integer' name='16' ordinal='16' />
            <column datatype='real' name='avg' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.00w78b315wtdtx1933nzn00bg8ad' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:R192:no:A1:R192:0' header='yes' outcome='2'>
            <column datatype='date' name='Day of Date' ordinal='0' />
            <column datatype='integer' name='1' ordinal='1' />
            <column datatype='integer' name='2' ordinal='2' />
            <column datatype='integer' name='3' ordinal='3' />
            <column datatype='integer' name='4' ordinal='4' />
            <column datatype='integer' name='5' ordinal='5' />
            <column datatype='integer' name='6' ordinal='6' />
            <column datatype='integer' name='7' ordinal='7' />
            <column datatype='integer' name='8' ordinal='8' />
            <column datatype='integer' name='9' ordinal='9' />
            <column datatype='integer' name='10' ordinal='10' />
            <column datatype='integer' name='11' ordinal='11' />
            <column datatype='integer' name='12' ordinal='12' />
            <column datatype='integer' name='13' ordinal='13' />
            <column datatype='integer' name='14' ordinal='14' />
            <column datatype='integer' name='15' ordinal='15' />
            <column datatype='integer' name='16' ordinal='16' />
            <column datatype='real' name='avg' ordinal='17' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:R192:no:A1:R192:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Day of Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Day of Date]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Day of Date</remote-alias>
            <ordinal>0</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[1]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>1</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>2</remote-name>
            <remote-type>20</remote-type>
            <local-name>[2]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>2</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>3</remote-name>
            <remote-type>20</remote-type>
            <local-name>[3]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>3</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>4</remote-name>
            <remote-type>20</remote-type>
            <local-name>[4]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>4</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>5</remote-name>
            <remote-type>20</remote-type>
            <local-name>[5]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>5</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>6</remote-name>
            <remote-type>20</remote-type>
            <local-name>[6]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>6</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>7</remote-name>
            <remote-type>20</remote-type>
            <local-name>[7]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>7</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>8</remote-name>
            <remote-type>20</remote-type>
            <local-name>[8]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>8</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>9</remote-name>
            <remote-type>20</remote-type>
            <local-name>[9]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>9</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>10</remote-name>
            <remote-type>20</remote-type>
            <local-name>[10]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>10</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>11</remote-name>
            <remote-type>20</remote-type>
            <local-name>[11]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>11</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>12</remote-name>
            <remote-type>20</remote-type>
            <local-name>[12]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>12</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>13</remote-name>
            <remote-type>20</remote-type>
            <local-name>[13]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>13</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>14</remote-name>
            <remote-type>20</remote-type>
            <local-name>[14]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>14</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>15</remote-name>
            <remote-type>20</remote-type>
            <local-name>[15]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>15</remote-alias>
            <ordinal>15</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>16</remote-name>
            <remote-type>20</remote-type>
            <local-name>[16]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>16</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>avg</remote-name>
            <remote-type>5</remote-type>
            <local-name>[avg]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>avg</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_9B5964B41BC3468CB4C585C934042C1C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[10]' role='measure' type='quantitative' />
      <column datatype='integer' name='[11]' role='measure' type='quantitative' />
      <column datatype='integer' name='[12]' role='measure' type='quantitative' />
      <column datatype='integer' name='[13]' role='measure' type='quantitative' />
      <column datatype='integer' name='[14]' role='measure' type='quantitative' />
      <column datatype='integer' name='[15]' role='measure' type='quantitative' />
      <column datatype='integer' name='[16]' role='measure' type='quantitative' />
      <column datatype='integer' name='[1]' role='measure' type='quantitative' />
      <column datatype='integer' name='[2]' role='measure' type='quantitative' />
      <column datatype='integer' name='[3]' role='measure' type='quantitative' />
      <column datatype='integer' name='[4]' role='measure' type='quantitative' />
      <column datatype='integer' name='[5]' role='measure' type='quantitative' />
      <column datatype='integer' name='[6]' role='measure' type='quantitative' />
      <column datatype='integer' name='[7]' role='measure' type='quantitative' />
      <column datatype='integer' name='[8]' role='measure' type='quantitative' />
      <column datatype='integer' name='[9]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_9B5964B41BC3468CB4C585C934042C1C]' role='measure' type='quantitative' />
      <column caption='Avg' datatype='real' name='[avg]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Sheet1_9B5964B41BC3468CB4C585C934042C1C]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_9B5964B41BC3468CB4C585C934042C1C:qk]' pivot='key' type='quantitative' />
      <column-instance column='[10]' derivation='Sum' name='[sum:10:qk]' pivot='key' type='quantitative' />
      <column-instance column='[11]' derivation='Sum' name='[sum:11:qk]' pivot='key' type='quantitative' />
      <column-instance column='[12]' derivation='Sum' name='[sum:12:qk]' pivot='key' type='quantitative' />
      <column-instance column='[13]' derivation='Sum' name='[sum:13:qk]' pivot='key' type='quantitative' />
      <column-instance column='[14]' derivation='Sum' name='[sum:14:qk]' pivot='key' type='quantitative' />
      <column-instance column='[15]' derivation='Sum' name='[sum:15:qk]' pivot='key' type='quantitative' />
      <column-instance column='[16]' derivation='Sum' name='[sum:16:qk]' pivot='key' type='quantitative' />
      <column-instance column='[1]' derivation='Sum' name='[sum:1:qk]' pivot='key' type='quantitative' />
      <column-instance column='[2]' derivation='Sum' name='[sum:2:qk]' pivot='key' type='quantitative' />
      <column-instance column='[3]' derivation='Sum' name='[sum:3:qk]' pivot='key' type='quantitative' />
      <column-instance column='[4]' derivation='Sum' name='[sum:4:qk]' pivot='key' type='quantitative' />
      <column-instance column='[5]' derivation='Sum' name='[sum:5:qk]' pivot='key' type='quantitative' />
      <column-instance column='[6]' derivation='Sum' name='[sum:6:qk]' pivot='key' type='quantitative' />
      <column-instance column='[7]' derivation='Sum' name='[sum:7:qk]' pivot='key' type='quantitative' />
      <column-instance column='[8]' derivation='Sum' name='[sum:8:qk]' pivot='key' type='quantitative' />
      <column-instance column='[9]' derivation='Sum' name='[sum:9:qk]' pivot='key' type='quantitative' />
      <column-instance column='[avg]' derivation='Sum' name='[sum:avg:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:avg:qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[__tableau_internal_object_id__].[cnt:Sheet1_9B5964B41BC3468CB4C585C934042C1C:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:1:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:10:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:11:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:12:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:13:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:14:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:15:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:16:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:2:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:3:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:4:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:5:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:6:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:7:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:8:qk]&quot;</bucket>
            </map>
            <map to='#d5d5d5'>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:9:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet1' id='Sheet1_9B5964B41BC3468CB4C585C934042C1C'>
            <properties context=''>
              <relation connection='excel-direct.00w78b315wtdtx1933nzn00bg8ad' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:R192:no:A1:R192:0' header='yes' outcome='2'>
                  <column datatype='date' name='Day of Date' ordinal='0' />
                  <column datatype='integer' name='1' ordinal='1' />
                  <column datatype='integer' name='2' ordinal='2' />
                  <column datatype='integer' name='3' ordinal='3' />
                  <column datatype='integer' name='4' ordinal='4' />
                  <column datatype='integer' name='5' ordinal='5' />
                  <column datatype='integer' name='6' ordinal='6' />
                  <column datatype='integer' name='7' ordinal='7' />
                  <column datatype='integer' name='8' ordinal='8' />
                  <column datatype='integer' name='9' ordinal='9' />
                  <column datatype='integer' name='10' ordinal='10' />
                  <column datatype='integer' name='11' ordinal='11' />
                  <column datatype='integer' name='12' ordinal='12' />
                  <column datatype='integer' name='13' ordinal='13' />
                  <column datatype='integer' name='14' ordinal='14' />
                  <column datatype='integer' name='15' ordinal='15' />
                  <column datatype='integer' name='16' ordinal='16' />
                  <column datatype='real' name='avg' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontcolor='#000000cc' fontname='Tableau Medium' fontsize='16'>People Fully Vaccinated Per Hundred</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (vaccination_countries)' name='federated.0u5d0ty1d9fr0f195v4p40draon0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0u5d0ty1d9fr0f195v4p40draon0'>
            <column caption='Location' datatype='string' name='[location]' role='dimension' semantic-role='[Country].[Name]' type='nominal'>
              <semantic-values semantic-role='[Country].[Name]'>
                <semantic-value key='&quot;Micronesia (country)&quot;' value='&quot;Federated States of Micronesia&quot;' />
                <semantic-value key='&quot;Timor&quot;' value='&quot;Timor Leste&quot;' />
                <semantic-value key='&quot;Vatican&quot;' value='&quot;Vatican City&quot;' />
              </semantic-values>
            </column>
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column caption='People Fully Vaccinated Per Hundred' datatype='real' name='[people_fully_vaccinated_per_hundred]' role='measure' type='quantitative' />
            <column-instance column='[people_fully_vaccinated_per_hundred]' derivation='Sum' name='[sum:people_fully_vaccinated_per_hundred:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0u5d0ty1d9fr0f195v4p40draon0].[Longitude (generated)]' field-type='quantitative' max='26746241.08475782' min='-11180040.20409392' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0u5d0ty1d9fr0f195v4p40draon0].[Latitude (generated)]' field-type='quantitative' max='16342457.195978323' min='-8863933.1358912382' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='40.0' field='[federated.0u5d0ty1d9fr0f195v4p40draon0].[sum:people_fully_vaccinated_per_hundred:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='legend-title'>
            <format attr='text-align' value='auto' />
          </style-rule>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0u5d0ty1d9fr0f195v4p40draon0].[sum:people_fully_vaccinated_per_hundred:qk]' value='Value'>
              <formatted-text>
                <run fontalignment='2'>Value</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.0u5d0ty1d9fr0f195v4p40draon0].[sum:people_fully_vaccinated_per_hundred:qk]' />
              <lod column='[federated.0u5d0ty1d9fr0f195v4p40draon0].[none:location:nk]' />
              <geometry column='[federated.0u5d0ty1d9fr0f195v4p40draon0].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='134' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0u5d0ty1d9fr0f195v4p40draon0].[Latitude (generated)]</rows>
        <cols>[federated.0u5d0ty1d9fr0f195v4p40draon0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{CFD4B9BA-A163-4052-9055-6001CF7B2FB8}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New vaccinations smoothed per million  for top 7 population EU countries</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (vaccination_time_series_eu)' name='federated.1qymhio1qy07tx1c3y6lu0tpuxto' />
          </datasources>
          <datasource-dependencies datasource='federated.1qymhio1qy07tx1c3y6lu0tpuxto'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[population]' derivation='Median' name='[med:population:qk]' pivot='key' type='quantitative' />
            <column caption='New Vaccinations Smoothed Per Million' datatype='integer' name='[new_vaccinations_smoothed_per_million]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[new_vaccinations_smoothed_per_million]' derivation='Sum' name='[sum:new_vaccinations_smoothed_per_million:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[med:population:qk]' included-values='in-range'>
            <min>809.0</min>
            <max>145934460.0</max>
          </filter>
          <filter class='quantitative' column='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:population:qk]' included-values='in-range'>
            <min>34286425</min>
            <max>145055342</max>
          </filter>
          <slices>
            <column>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[med:population:qk]</column>
            <column>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:population:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:population:qk]' value='population'>
              <formatted-text>
                <run>population</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:location:nk]' />
              <text column='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:location:nk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:location:nk]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='match' />
                <format attr='font-weight' value='bold' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed_per_million:qk]</rows>
        <cols>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{176BB9C5-DB35-4FC0-86A3-EFB36536CC6F}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>New vaccinations smoothed every day</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (vaccination_time_series_eu)' name='federated.1qymhio1qy07tx1c3y6lu0tpuxto' />
          </datasources>
          <datasource-dependencies datasource='federated.1qymhio1qy07tx1c3y6lu0tpuxto'>
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[population]' derivation='Median' name='[med:population:qk]' pivot='key' type='quantitative' />
            <column caption='New Vaccinations Smoothed' datatype='integer' name='[new_vaccinations_smoothed]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[new_vaccinations_smoothed]' derivation='Sum' name='[sum:new_vaccinations_smoothed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[med:population:qk]' included-values='in-range'>
            <min>809.0</min>
            <max>145934460.0</max>
          </filter>
          <filter class='quantitative' column='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:population:qk]' included-values='in-range'>
            <min>36923780</min>
            <max>145934460</max>
          </filter>
          <slices>
            <column>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[med:population:qk]</column>
            <column>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:population:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:location:nk]' />
              <text column='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:location:nk]' />
            </encodings>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='auto' />
                <format attr='font-size' value='8' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:new_vaccinations_smoothed:qk]</rows>
        <cols>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{4A97F63E-2E84-4F9B-8364-4988B8EBFD8C}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontcolor='#b4b4b4'>Selected 16 countries and </run>
            <run bold='true' fontcolor='#4e79a7'>their average</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (selected_avg)' name='federated.08wnq260jfotwd18s4oj11dsq9xo' />
          </datasources>
          <datasource-dependencies datasource='federated.08wnq260jfotwd18s4oj11dsq9xo'>
            <column datatype='integer' name='[10]' role='measure' type='quantitative' />
            <column datatype='integer' name='[11]' role='measure' type='quantitative' />
            <column datatype='integer' name='[12]' role='measure' type='quantitative' />
            <column datatype='integer' name='[13]' role='measure' type='quantitative' />
            <column datatype='integer' name='[14]' role='measure' type='quantitative' />
            <column datatype='integer' name='[15]' role='measure' type='quantitative' />
            <column datatype='integer' name='[16]' role='measure' type='quantitative' />
            <column datatype='integer' name='[1]' role='measure' type='quantitative' />
            <column datatype='integer' name='[2]' role='measure' type='quantitative' />
            <column datatype='integer' name='[3]' role='measure' type='quantitative' />
            <column datatype='integer' name='[4]' role='measure' type='quantitative' />
            <column datatype='integer' name='[5]' role='measure' type='quantitative' />
            <column datatype='integer' name='[6]' role='measure' type='quantitative' />
            <column datatype='integer' name='[7]' role='measure' type='quantitative' />
            <column datatype='integer' name='[8]' role='measure' type='quantitative' />
            <column datatype='integer' name='[9]' role='measure' type='quantitative' />
            <column datatype='date' name='[Day of Date]' role='dimension' type='ordinal' />
            <column caption='Avg' datatype='real' name='[avg]' role='measure' type='quantitative' />
            <column-instance column='[10]' derivation='Sum' name='[sum:10:qk]' pivot='key' type='quantitative' />
            <column-instance column='[11]' derivation='Sum' name='[sum:11:qk]' pivot='key' type='quantitative' />
            <column-instance column='[12]' derivation='Sum' name='[sum:12:qk]' pivot='key' type='quantitative' />
            <column-instance column='[13]' derivation='Sum' name='[sum:13:qk]' pivot='key' type='quantitative' />
            <column-instance column='[14]' derivation='Sum' name='[sum:14:qk]' pivot='key' type='quantitative' />
            <column-instance column='[15]' derivation='Sum' name='[sum:15:qk]' pivot='key' type='quantitative' />
            <column-instance column='[16]' derivation='Sum' name='[sum:16:qk]' pivot='key' type='quantitative' />
            <column-instance column='[1]' derivation='Sum' name='[sum:1:qk]' pivot='key' type='quantitative' />
            <column-instance column='[2]' derivation='Sum' name='[sum:2:qk]' pivot='key' type='quantitative' />
            <column-instance column='[3]' derivation='Sum' name='[sum:3:qk]' pivot='key' type='quantitative' />
            <column-instance column='[4]' derivation='Sum' name='[sum:4:qk]' pivot='key' type='quantitative' />
            <column-instance column='[5]' derivation='Sum' name='[sum:5:qk]' pivot='key' type='quantitative' />
            <column-instance column='[6]' derivation='Sum' name='[sum:6:qk]' pivot='key' type='quantitative' />
            <column-instance column='[7]' derivation='Sum' name='[sum:7:qk]' pivot='key' type='quantitative' />
            <column-instance column='[8]' derivation='Sum' name='[sum:8:qk]' pivot='key' type='quantitative' />
            <column-instance column='[9]' derivation='Sum' name='[sum:9:qk]' pivot='key' type='quantitative' />
            <column-instance column='[avg]' derivation='Sum' name='[sum:avg:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Day of Date]' derivation='Day-Trunc' name='[tdy:Day of Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.08wnq260jfotwd18s4oj11dsq9xo].[:Measure Names]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:1:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:2:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:3:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:4:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:5:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:6:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:7:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:8:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:9:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:10:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:11:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:12:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:13:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:14:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:15:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:16:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:avg:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.08wnq260jfotwd18s4oj11dsq9xo].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:avg:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:1:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:10:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:11:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:12:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:13:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:14:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:15:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:16:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:2:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:3:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:4:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:5:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:6:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:7:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:8:qk]&quot;</bucket>
              <bucket>&quot;[federated.08wnq260jfotwd18s4oj11dsq9xo].[sum:9:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.08wnq260jfotwd18s4oj11dsq9xo].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.08wnq260jfotwd18s4oj11dsq9xo].[tdy:Day of Date:qk]' scope='cols' value='Date' />
            <format attr='title' class='0' field='[federated.08wnq260jfotwd18s4oj11dsq9xo].[Multiple Values]' scope='rows' value='New Vaccinations Smoothed Per Million' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.08wnq260jfotwd18s4oj11dsq9xo].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-transparency' value='255' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='774' />
                <format attr='maxwidth' value='774' />
                <format attr='minheight' value='379' />
                <format attr='maxheight' value='379' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.08wnq260jfotwd18s4oj11dsq9xo].[Multiple Values]</rows>
        <cols>[federated.08wnq260jfotwd18s4oj11dsq9xo].[tdy:Day of Date:qk]</cols>
      </table>
      <simple-id uuid='{58288A20-A806-4A2D-9DE7-AD736AEA1DB8}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='98400' x='800' y='1000'>
              <zone h='88625' id='3' name='Sheet 1' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9375' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.0u5d0ty1d9fr0f195v4p40draon0].[sum:people_fully_vaccinated_per_hundred:qk]' w='98400' x='800' y='89625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='16' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='15' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='88625' id='3' is-fixed='true' name='Sheet 1' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9375' id='8' name='Sheet 1' pane-specification-id='0' param='[federated.0u5d0ty1d9fr0f195v4p40draon0].[sum:people_fully_vaccinated_per_hundred:qk]' w='98400' x='800' y='89625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{AFA4B101-38FE-4B38-A35E-78F4ACC51BF9}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='600' maxwidth='1000' minheight='600' minwidth='1000' sizing-mode='fixed' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97334' id='7' param='horz' w='98400' x='800' y='1333'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='97334' id='5' w='98400' x='800' y='1333'>
              <zone h='97334' id='3' name='Sheet 4' w='98400' x='800' y='1333'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='9' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='97334' id='8' param='vert' w='98400' x='800' y='1333'>
                <zone fixed-size='280' h='97334' id='3' is-fixed='true' name='Sheet 4' w='98400' x='800' y='1333'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{C3B51732-774D-4A5B-B9A8-4F5F0E88489E}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='89'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='188'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='56'>
            <card type='columns' />
          </strip>
          <strip size='60'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0u5d0ty1d9fr0f195v4p40draon0].[sum:people_fully_vaccinated_per_hundred:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0u5d0ty1d9fr0f195v4p40draon0].[none:location:nk]</field>
            <field>[federated.0u5d0ty1d9fr0f195v4p40draon0].[sum:people_fully_vaccinated_per_hundred:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{27BD60FB-4A26-40AE-BE00-B1AA0208913E}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:population:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:location:nk]</field>
            <field>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[tdy:date:qk]</field>
            <field>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{802A77B6-7B7B-4BF4-B5BA-DF6B82F2E26B}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[sum:population:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='2' param='[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[none:location:nk]</field>
            <field>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[tdy:date:qk]</field>
            <field>[federated.1qymhio1qy07tx1c3y6lu0tpuxto].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CC601129-72DA-406E-85D9-B54FFA26E54A}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.08wnq260jfotwd18s4oj11dsq9xo].[:Measure Names]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.08wnq260jfotwd18s4oj11dsq9xo].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.08wnq260jfotwd18s4oj11dsq9xo].[:Measure Names]</field>
            <field>[federated.08wnq260jfotwd18s4oj11dsq9xo].[tdy:Day of Date:ok]</field>
            <field>[federated.08wnq260jfotwd18s4oj11dsq9xo].[tdy:Day of Date:qk]</field>
            <field>[federated.08wnq260jfotwd18s4oj11dsq9xo].[yr:Day of Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D4B3868A-A8FF-4F37-A3F4-0D23360AC18C}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Sheet 1'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{5162D5B5-C0E9-4B49-8765-B90D91BC2CA4}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Sheet 4'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AFCBC126-4F72-4603-8212-2911453B52DA}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29d3wdV533/565vUr3XvXe3W25twTHsVOcHlKBAKHD8tvCwrLPsrs88INt
      wLMPsMBSlhZICGkEEkLiFPcmO7Zs2ZIsyeq93arbZ+b54zpyhK9iyVaN5v165WXl3plzvzNz
      PnPO+Z7v+R5BURQFFZUFijjbBqiozCbaqSpIkiRkWUYQhKkqUkVl2pmUADqb60nJW4y/rxVf
      WCYrw4nNqMUTFnGlmAHQaDTTYqiKynQwqS6QQYgQiILNZmUkEGCwv4fq2mYcdtN02aeiMq1M
      SgAmoxEAjd6MEQlZb8Jp1hKMytNinIrKdDOJLlCcXh+I0U50RpGUrFzSHDYMBiMjI0EwWKbP
      ShWVaUKYSjeoJEnqGEBlXqG6QVUWNKoAVBY0qgBUFjSqAFQWNKoAVBY0kxJAeMRHVIKg30N3
      3yDhcBgUiWAwPF32qahMK5MSQPv5kwyFIBJX8Az20dPXS0tTA4pWN132qahMK5OKBcrJzsYP
      hEe8pKRlEvb14/ZFKdBpRoPh1OhqlfnEpGaCuwaCyKFOtNERZI1Meno2RYUGht0+0p12QA2G
      U5lfqDPBKgsa1QuksqBRBaCyoFEFoLKgUQWgsqBRBaCyoFEFoLKgUQWgsqBRBaCyoJlUKERP
      WyO27HKU4CAjMRGTXoPVpMUbEnBeTIuiojKfmJQAxHgAfxRSdCZ8A50EBYWWQIwVq5aPxgKp
      qMwnJiUAi9mMHzBbLAiAqDVgNUqEYzJmXaI3JYpqr0pl/jC5tCheBSHaSbc7jiRBZk4mNrOR
      wEgIQZ9Ii6KmRlSZT6jBcCoLGrW/orKgUQWgsqBRBaCyoFEFoLKgUQWgsqBRBaCyoFEFoLKg
      UQWgsqCZVChE45ljuMo3MtLbhD8KaQ4bFr1ISLCQpgbDqcxDJiWATFcKIxJEZRGrFtzeIdr9
      MdauWaUmxlKZl0xCABJ9fQOEIk704RG8MXA6bKSkyQx6AqSnWgE1MZbK/GISsUAK4VAYRA16
      rYgkg0YjIooCkiSj0WjUWCCVeYcaDKeyoFG9QCoLGlUAKgsaVQAqCxpVACoLGlUAKgsaVQAq
      CxpVACoLGlUAKguaScUCvUXd2dMEogKZ6amYtQqY09VgOJV5yVUJQBRFwn4fIZuWPn+M9WsK
      1WA4lXlJUgHIsRCHj1ShMaeyed2qy7632+3ERSM2q4Vsp0jvsI8sdZfIeYmiKIR9IUwLtAVP
      KoCop5Oo3kVJpjPpSdl5hWS/7f/t02GZyozg6Rqi6om95CwrZNGNK9GbDLNt0oySVAAaSxq1
      R39KT8FyivJzZtomlRmk/eQF1j30HiKBMMd+tYeMsmwsaXbyVhbPtmkzQlIBxHy9rNn5EJGB
      ppm2R2UGkeISvp5hnHduQBAE0ooz8XQN0nSwlpQsB7aM1Nk2cdpJ6gY1Z1ZgCnWRW1Q+0/ao
      zCB95zvJXJQ7mtBYbzaQUZ7L0pvX0LC3ZpatmxmSCuD0iUO0dHTTeKF5pu1RmUGGWvrIKM+9
      7POUHCdSXKLvfNcsWDWzJBXAQP/gTNuhMgv4+73YMlIu+1wQBCrv2Uzz0Xp66ztmwbKZQ50J
      XqAoioIUl9Dokk8F6c0G1j5wHc1H6t+xHFma37sCJRVAekbaTNuhMsOEfcEr+v715oRLNBaO
      Jv1+uL2fgz95ecptm0mSCsDnD5KRkUGa0zHT9qjMEN4eN/asKz/f9JJsBpt7Lz+/1825l08i
      SzJyXJoOE6cVJeInfOD/JHeDprnS8UXihELBmbZLZYbw9bpJyb6yADIqcmg5dh5nQTpSLNFl
      8nQP0bi3hjX3b6Vx31lGhgNJxxKzjqKgKDKCeCk6QZHjRI/8AKn7FHs0+uQCuNBUTyCmJb9s
      SdJy62qq8UchO9OFSaOAOU0NhptneHuHyV9TesXj7FkOhlr7efOpgxisRuLROGaHlXXv24bR
      ZsKaZicw5JuTApC6TxF+/f9Ht+J+tCXbUaQI0cPfQ5OzGv/NX+PUsR8lF0D54uWE46A1WpIW
      LMsyigyRkJ9ef4z1awrUYLh5RsgbRGfWE4/Hr3js5o/uRGfSX7YBYjwex+S04u/3kF6ePc7Z
      s0es9RDaDZ9GjgaIHPxP0BgQl9yNWLiVV07+gruWvTe5AEoKsqnvjbKsPC9pwaJGg14DeksK
      FQ6NGgw3z5BicbR6LVrtxIKBtfbxj7NnpDLQ0DXhsmYK/4AXofMUxg0fQ9CZYeX9o9/FpBgX
      hpp4ZP1HkwtAQUN99RF6u/O4advmy75fsnxshOjca/xU3glfv2fKwhwsTisjw4EpKWuqGG4f
      4OwLBymNDRHtGcFZMLZ7frKjitV56xAFMbkXSBQVIhgozlHdoe9GfL2eCXmAJoKo0cypuQB/
      v4dzL7/J2htSsVRsThrScaB5L+8p2Q6M4wZV5Dghv4faxtZpNVZldvD1uknJmrpAN51RN+5c
      wUwSGQlT/fxRVt+3Ba2nBuvy7cSjMaTYpXGOP+wjLsdxWlzAOALYf/AouQVF3Llr58xYrjKj
      +KewCwRgddkJDPqmrLzJoigKw239HH9iL0tuWo3VZUfqO4smawVpRZkMtfaNHnu8/SjrCzYR
      6+0l8PobyccAg4MDBKID7Dti4oYt62fqOlRmAEVRRv35U4XFZSM47MeRN/NdZm/PMPWvVaM1
      6lnzwPWYUy0oisygt4MUKUpGRQ5dNW3sDewlKkVpH27h/7v+87i//UNMlauSC+DO974PWWHM
      BILKu4OwP4TRbprSMs1OG97u4SktczwURUGRFUSNSMepC3RUN7Pijg1Y0+yjblrF00FD2E+g
      8VXuWn4fL7z8DCMpUSrSFxOI+BGPn0ZfUoxt163JBVC1/xWGInoMZht33HzDjFyYyszg7/Ng
      z5zaEBeL00b32bYpLTMZrVUNdJ1pQQGyl+Qz2NLHxke2X9aaRXtOU7L0Ln7ZdYKNRVuptdXz
      EfFjLF60iu05Wxn45rfI+McvAeOMATatX40pNRNBmv2BjcrUMpUu0Lcwp1oIeqbXFTrU1k9/
      YxcbP7SDNfdtJeQLsuaB65J25bztR8gp28GK7Eq++frX+MxNf8NgbS9BTwDv08+QcvfdiIZE
      oF/SFsCQmkNwqJpVlaun9aJUZh5/n4esissXwVwLolaDMo2u0Fg4Su3Lb7L+/TckJvD0Vpbv
      WnfZcYqicODCHlJbD5Kx8yvsdJZQll5BUVoJuo0irc+/TrrHi3HNpXqdtAWIuDvp90epP38+
      qUHDQwP09Q8SjcVAkYlEYlNzpSrTTnDYj9llm/JyRY0GaRqiQhVF4cwLVZRvW4HR9s5jlxPt
      R6npqaY4tRBBayDV5KAydy0AafkutIffwPHoh8aEdCQVgMGRT5FTj9nuSvpDer2e7u4uuru7
      6GhpIjJ35kFU3gFFUVAUBVGc+nVQZoeVoHvqu0HdNW3oLQYyF1251WocbGBHTiXalMtDeMJv
      vIbHUYBgHxu3kLQLNNB2FkN6OcU5yQdLJr2I3ZGBFHUz6IuSW6xTg+HmAWFfEIPNNKEAuMli
      cljwD3gxOZIHUF4tzUfrWf/+bUjSlVuXdncrt1uzEFILx1yjEosROnkK8/W3M9Tah7MoY/S7
      pALo7Pejjevo7YtRUni5mtzeIIX5WXjdOvJz9Qy6fWSowXBznpFBP/ZMx7QErllddsLekSkt
      u7+pG0eeC6P1ym5bBYVIPIxppB8hrXSMHYEDBzFv2UxGeT5Drf1klF3KdZW0LRTCg/R4IgwO
      JfftpmVkohUFXK409Gb7aOVXmdv4+73YM6cn14/FZZvSoLhoKELDG2co2Zx8TcqfEwj7sRns
      yO4WRMelpF6S10vg9Tew3rANZ2EGA009KPKlXkpSASyu3Iw26iPVkXwMoDI/8fW6py3ZlcVp
      Y2RoasIhwv4gxx/fS8X2FZgd1gmd0+5uJd9RiOxpR0wtBEAeGWHwO9/F8cFHEM1mtHotaSVZ
      9J7vHD0veQsQD5GSVUTIPzOzeyozw8iwH8s0eIAAdEY98SnwBsqSTO3uUyy9ZU3SnEXj0e5p
      o8BRBFIUQasHYOTAQSxbtmBYVDF6XMnmxbQcqR8dqyYVgDGtGNwtuLIKruFS5heKrNDf2E3L
      0fNXfJCxcJTOMy3zasAfC0fR6rWXreqaSgRRnHRodDwaIxa+dL8vHDyHIy8NR376pMppG24h
      3+QEw8XuuKIQPFaFeeuWMccZbSZS89Jo3H824RFLVliwrwFz4Rp8A+/upEhvp+nQOTrPtBCL
      RDn13OFxH2Q0FOHEk/vpreuk5oWqafF9TweeriFSc6e3S5tYHOOf1Dn1r5/m6GOvE3QH8HQP
      M9DcS+H6yaXkVBSFbm8n6fEQGkcRALGuLjRpLkTT5QPoJTtXEfKMUPX43uQCMKWXMtRw9JKa
      3uW4OwYYaumn8t7NVGxbgasog1PPHSYejSFLMg17azj4k1c4/fujVP16DyVblrD2weuwZzup
      enwvYd/cz57h6Rya9mhNi8s+qXFALBzD3THIslvXcuqJl6h9+U1Yo+PZM0/S7m5Dkifmrm0e
      aqLYVYoyUI+YvgiAkf0HsFx/fdLjBVFk5Z0bUJYWJneDRtztCCn5pC8Q786Fw3Us27V2dIKo
      eNNiDDWtHPrpq2i0IpmL8tjwgRvwD3hJzXGOxp8UrS/Hlp7CyWcPs+lDNyJq5m6iPXfn4ISy
      QFwL1rTJrQvoONVE/uoS4vFaSrXfB2M2+xqtFK97lFfqXqQ/0Eu2PZddS+8i255DIOLHpDOj
      +bMo5aOtB9lYuBXp+E8wbP8nFFkmXFdPykMPAuANh0gxjm0JBrwhnj/ePN4WSQqRcJhQODK5
      OzAPkWJxQt4g1rRLYhcEgdyVxWQtyUcQxdGK7SrMuOx8V1EGGeXZNO4/S8UNK4hHYgQGfbMS
      Gz8eiqIQCYQwWI3T+jvWNDv9Dd0TtunouYP0Fvaz8+Ruyu77HzR6C3dX/wb5+M9YrtERi/ho
      7a6mc7iZzM2f5Xtv/pyclHweWfcRRCHxTGRFpmGgnocr308k5EG0phOpr6faoGWxz0um1cZ/
      HtzHF66/AZshcf2xuMT3nqvik3euTS4AUW+HiA+vb2rjxuciA009ZJTlJB0cTnTRSMmWJZz+
      /VFqXqjC1+9BEASylxZQsnnxVJt7VYR9QYx287QOgCGxLmCiYwD34BA1zlo+61pNuuleDGkX
      +/3v+TyKHAcphknUsiLQzzMv/wPlu/+J1SYnw44Sdte/xK1L7gBgb9NrrMiuROk5gya7EoCR
      Q4fpXlxBf8sFip0uClJSqe7p5vqiEhRF4Zcvn+b6VYWU5DiSjwHqWnvIcNkx6ZIb39/TQVNL
      O4ODg4T9wwx6534fOBmKotB6vIGCdWXXVI4oilTes5miDRWsf3gbmx/dgadzEF+fe4osvTYG
      m3tJL53+vD0abSIgbiLesd2NL3HX6vtwth1Gv/bRMd8JohZBZ0LQ6BBTcklZ9RBf15pY5Crl
      zraD1NY8TTgepqa7mvN9ddy99C5iZ36LdtGtBPbtp/5CE5Wbt+CyWKju7uKDq9dxtrcHWVH4
      7RvnSE81s3NtYrIs6Ssu5O7Hml6CVZfcE9LW1o7J5sITD9Dqj7F2zap5GQvUdboFo9084QRR
      V8KclvCxy4pC5tJ8us+2TUvk5WQZauunYF3ZtMQA/Tl6i4GQbwS9ZfzuliRLnO45yT3Lb0FS
      FCSdFd7BtvV5mzjQtIfcjZ9B8XbyoT3/QvDVr9Ay1MT9rjKiz38WIW8Tvt0niQeDVN+6k0fT
      MnBozUQ8MiKQZ7fzx5P1tPS4+cJDm0dji5IKYNN7dhKLxwmFki+IsVhsiFIcSW8l2xHD7Q/h
      vBiqOl9igTzdw3SdbmXjB29Eo516m7Mqcmk5Us/iHZVTXvZkCQz4SM12zcggPSXLwcigH3PK
      +DO41W1vsjxrJZrOY4gl264YP+S0uvjyrf+KTqsDVzGmO/6T7/z2ET5S+QGc2StAn4H7V0+i
      L7DRf8tO8gYHMOn1PPlqLX3uEW5cVkapM4P/fOIo3/j4zfSM+Mm22dGK4jgtQF8Du9/sIiTF
      efiuWy77vmLxIkIRCZNRj1arIRqdX+sB4tEYNS9WsfaB69DopkewGp0Wg8VI0BPAnDqx6XxI
      dMtCnhGMKeYpCVuWYnFEjTBjHipbpgNfn+cdu1x7Gl/lwYr3ET/9PQzbvjihcvUXZ3cBLEY7
      H777+2Sl5BE+fQbf8z/AesdtmNeu5bfHj/Lgykr2VbeR7bKxa1M533uuirgks2xRGk67iccO
      VZFts+M0m5MLwJhWiNXUz9KC5DsFanUGbG8bH+j1+qTHzVXqXztN8cZFE44zuVqyluTTW9cx
      4YCusC9I9fNHiQbD5K0qmZJBtKd7mJTsmYvpsmekMtA4vidoINCPt2uIvC0uIhEfov3qxiYZ
      QQ2DP/8uGrsN11//Fb9ubiBUdZj8lFTkGLxc1cRXPnIDBp0GTyBMeZ6L3zedwRcJ4zSZybTa
      8IbD480DdOIJS1h9I1dl3Fwm5BnB1+dm2a610/5bmRW5vPnUgQkJIBqK8OZTB1h802ocuS6O
      /OI1MhflYnFe2xhiqLUPZxL37XSRiAod3xP0RuNuNmVsRWp6FW3F5b2LKyEHg3ifeZZYby+p
      99+HvriYDp8Xq0HPw6tWoxFEvvP0MR65eSVGfaJ631BZBIC9w8Dpni5KXS62XHy5J0+NaExB
      Drrx+edWzsepoGH/Wcrfs3zaXYJwaYeVaPDK8ym1L5+k9LqluAozELUaltyyhoY9Z67ZhsHm
      PtJKMq+5nIkiakSUcZwh0XiE4+cOs7pgHfHGV9BNUgByOMzgd7+HvrSU9C98Hn1JCQgCR9pb
      2JxfjFGr409Hm0hPNbO8+HLR56WkcrC1hVJnGoIgIAjCeLlBBfQGI/IEVuHMJ8K+ICODPtJK
      smbsNzMX59H3tvDbZHi6h4iFo2QuurT4yJGXxog7cE0pB+ORGCgKOuPMdlGNdgvhJK7xwy0H
      yOrPIEVpRjCnIRgvLU/sGw7ws5dOUd+efINGJR5n6Ac/xLp9G5atWwhJcZqGBtjdWI8vHCHH
      budQTTu1rQM8ctPKpGXkpaQQkyUyrZda1aQCkKUYgkaHPMFYjLlELBzl0M9209/YfdlbqKWq
      geJNi2bk7f8W2Uvy6Tz9zpGj9a9Vs+Sm1WPsEgSBnOWF15RvZ7ClD1fxzL3938KemZp0DmR/
      8x7WazMQzv0Cw7a/H/28prmPbz99lKWF6Tz5+lmeP1BPnzuAPxhBkmUUWcb92K8wLl+GeeNG
      FEXhpyeOcWF4iCKHi/evWsPLVRc4cKadv75/I5pxBvy59lQ2FxSNuc9JxwB155uIjHgQdTN/
      864FRVE4+8cT5FeW0n6yCW/PMGXXL0MQBKRYnIELPSy6MfnbYbowpVgw2s3jTkaFfUEEQRgT
      ivEWeSuLqXp8LwVryhDEyYu2v7Gb/MqSq7L7WkjJceLpHBrTosmKjCLJFMdfx3TTNxHNifXm
      nQM+nnjtLP/wyPXYLQZWV2Rx8Ew7j++uIRSNEwxHyYv62GUzUnhTIlet9+JA9qayRTR3ufnu
      K1VkOa18/qHN6N7BpW3S6bipbNGYz5IKoKyogJwlWxkZnD/h0JFAmPrXq9EatOSvLiGvspia
      F6o4+fRBRK2G4LCfgjWl05IR4Uos2VnJid/ux1WUeZk7svtcG9nLC5OepzcbSCvOpO1EA0Ub
      FiU9Zjxi4SierkFW3H55/pzpxpGXRsvRsSl1/GEfVl8/ztIiROclUT63v46P3laJ3ZIYLxl0
      WnasLWHH2hIUWWbosV9z1uzg55FstI/tJ8NhRWNU8EXDfL16Pw6bkQduWEpprvOqbE0qgMb6
      s5zrO0NeXh5FRUVXVfBMc/oPR8lbVUz2koLRAc6KOzfg63GjNegw2EzoDOPEdkwzRruZnOWF
      NO6rYdGNYzcX6a3rZP37t417bsUNKzjyi9dIzUsnNWfsQ1YUJdGCiCJ6s2GMuJoP11G8aTHC
      LAhebzYQC0dRFGW0uzEUHGS5u55w6dd5y/k8Eo7SNzxCWZLKq8TjuH/xS3QuF9vuuYNtwEgo
      xoB3hBfP1JFjS+Gm60txXePedEkFsHjpMvbX7sU0SxVmssiSTCQQJmfZ2DepKIrTvghkohRv
      XEzVE3vpqesga1Eegigw3DGAzqh7x0GqqNWw+r6tnHr2MM7CdPz9XtLLslFkhd66DrQGLYqs
      YLSbWXX3JiDhUu1v6mHrx1fM0NVdjtWVWCNsTUsMdIdHhigP6sF1aW7jwOl2rl9ZcNmYTA6F
      GPrhjzAuXYr15ptGv7ea9VjNeoydAvetWYpuCqIOkgpAa7SyZd1qhgPJg9zamhuJoseZYsFi
      0BCQDLO6S+RMrHa6VgRRoPKezdS/Vk3rsfOklWbTW9fBuoeSL9p4O2aHlQ2P3MBgcy/5lSUM
      NPciiALr37cNnUmPoiic+M0+vN3DpOQ4aTveSNH68lnp7r2FIz+d4fbBUQHEA33IMRe2jEu5
      pg6f6+Dv3791zHlKNIb757/Act1WzOsvT80vyTKSrExJ5YdxBCBFwzS3deBwJY9pj0YjxADP
      8Agt/jhr16yc1WC4/qZuXMUZMxLsdS1ojFqW3bGOSCBEf2MPlfdtRmcxTMhuQSuSXpHIZ5O/
      9tLClrfOLb9xJedeOsHqB6+j+1w7mz+6c1bvhz3HSdvxBnJWJlplrbeLuDEHjVFLPB5HUSAW
      kzBoxVE7lWgUzw9/jHHTRvSrVye1v9PnJdNimbJrG3dBTCgUZrwk2qnONLq7+jA6U8hyxPAE
      wjguLraYjWC44bYBSrcsnXM7FY6HNtVG8fqpjRJNzXJSuK6CIz99lbxVxegNsxuekprj5Gyv
      J7ERnUbEEOjFmLto9Bn1DgdwBIYJPPc7BI0GQa8ndPIk1p07sGy5fGNGAAU41N7K9pKyKXvW
      SUupb2rFZtIkkt8mwWq1Ulxux2TQodNpZzU5biwcvTjZMz/GK9NJ7soinIXp6EyzH5sliiKZ
      i/PoqW0nd0UROn8P5oIbRr9v7XGTG/NjKF+LIkkgSaT97efQ2MZ/MXR5PYiCQI596vYlTSqA
      ZUuXkllmRQomn5Uzma28fa2YYRbfNl01rWQvWzjpW66EKWVqc3NeC0Xry3nzqYPkLC9E5+vB
      9LaYqAtNXSy5ZRum1RNbjOSPRHix/hz3/dkWvddK8l0ipRhHD+3nTG3TlP7YVKMoCl1nWsld
      WTTbpqgkwWA1YXHZ6K3rgGAIa2ZiYlUeGaHxaDUlZZcSXwVj0XHHj10+L7+uPsGtFUtIt0xt
      BG/yUIh4hOVrt1CcN7dnggMDXow2E3qTYbZNWZAoikJV25F3PGbpLWuoO3iMtLT80dnswL79
      BEw2Ui6OG/2RCN85tJ8fHz/CcGis5/F4Zzu7G+t5YPkqihxXN9n1TiQVgM7qoq7qDTr7PVP+
      g1NJ4/5zFG2c3AypytTROtzMd/d/i1AsNO4xOqOeyhvyEByJbqoiy3TvP4ItP3fUv1/X38uN
      peXcVFbBGxcaR89tHBrgXF8vH1y9nrQpfvO/RVIBRP2DtPYO4fPNXQG4uwaRYnFcBTMX664y
      ltcbXmF13lpqey/fjf3taCNdCBfDHw6daOTnzlXcufXSi6u2v4+lGZkUO1wEIhEGRgIoisLu
      xvM8uLIS7TTOZyQtWWuwsGltJRbb1I22pxJFVqjbfYolN62GmQvsVHkbwWiQbm8n7135EKe7
      T73jsaG+cxgyFjMSjvL8a6f58sd3sKYiERgYjseIyRI2gxFBELixtJzq7i7aPG7y7KmYddPr
      YEkqgENHT+DxDFFckD+tP361tFY14CrKTBpBqTIzHGk9wLr8rVjETNqH3jncO9B7Bm1aBc/t
      q2NXWSoWZyJFuyTL7GluYkn6pbFmfqqDYCzK8c521uRM7WZ+yUgqgJycXJBlauvrp92AyRL2
      B+mqaaH8+mWzbcqCRZJkXj7azKvPDfN/v/4LAkdy2f2t/+Hs/hNc6B67DsAX9iKGfURFK9VH
      anjPjkvRqU/VVGPUatlUUDT6mQBk2ey0e9zkpUzPXgZvJ+k8gNnu5MadK9FcRQz6dNN2vJGS
      zUsQpyGVicqVkSSZ//PbQxRX9XFfpYHU9+2iVoEf7X2WlUfrOfPyWf79Sw+TetHD09JXS2lq
      AUeef4NNG5egcyU8OYFohFA8xvaSyzNBr8nJI8eeMiMLl5K2AOmpZvbtO0B7T3/Sk6JBLweP
      naSruwt3f9eMZYaTJZm+hm6ylszNrtm7HUVRePy1GhxHXuX921eQ8bGPYCgrZXV5KcsXa9hx
      WyHXjXRyuqlv9Jy+jqNEGwY5cLSO6zZc2qiirr9vTNfn7eg0GvJn4O0P48UCCQLRcJDauvMU
      ZF/uZTnf2ILJIDLi99I9EmP9mtwZCYbrrmklvSwLWZGR4+rerDPNy1UX6P7jK2wqk7DeddeY
      nRvvXf4gj5/8Bffcdj1/PN/F1uW5nGk9xsjxV4jnriPkXEZ6yqUdKmv7erlz8bJZD2BMKgCN
      1oAcG6FzIHmq6+zsLFraO9EZnZSmaugd9pE1TbtEKopCNBhhoKmbjpPNrHv4PfMm6O3dgCTL
      HKvtorqxl6H9BynNa8Z8z4fR6sbGXuU68kk1OVCK0+j61Xm8v/o1hrqTbC/I5AVxCdetKhp9
      boFohIgUx2mZ/bCNpDVJjkfwRDTcc2vyWPW0jCzSMmYms0JXTSstR8/jKsxg4yPb0c6TRTrv
      BgKhKN955ii5Vj1rT+2j8LpS/tvcy0P5G5Ief/eK+3ns+P9QVHYzf/AfovDRXTSdbMdrLuMD
      GxMxP1EpztM11dxQcm0JiaeKpGOA+Mgg/qjCyVPVM23PGBRFofVYAxsf2c7SW9aolX+G2XOy
      hTWFLnad3s2KO26kodLFhoItl21Q8RaZtixSjKmUFMd5rdfO60cVOgcDfOqudX7qYVoAAB0/
      SURBVIgXHSr7Wi6wPDObirS5MYGZtAVoHwiSa1Uw2GZ3ldVgcy8p2Y7RBFMqM4eiKBw+18lf
      Ki1Yb9qJaf06Duz+Zz5bdB3B330aQaMHnQnRWYJhwyfhosfm7uX38dNjP6RiBdxbsJmyllfH
      ZGro9Hq4rnDmM1WMR/LcoEYj8bhEIDC7meFaqxpYcvPqWbVhodLc7SZtuAe9JYx5y2Z8Hce4
      tfUgRr0F3bYvIprTUGJBIvv+A2moCc3FDS4y7dk4zS5y7LkstQ4jZYzNbxqOxzHp5k5LnlQA
      f/rDs7gKlmGZxTj/eDROZCSM1aXO9k4WRVGQZAXtNWSE3nOqlXU99aR84WOEX/4HznZWUXHb
      NzC+rf8vGO3o13yI2Okn0ez459HPP7T+Y4iCBunUr9GkXxJAOBbDOMccGEmt+fTn/nGm7biM
      /sZuMspzZtuMeUdzt5un9pzDGwjzzx/eRkySkGVw2Ca+P5iiKNTXtXJXUSqxE98gXnELrwsi
      m3LXcX6gn/K0tNE9usTsSuRD30H29yHaEn59sz7h3QkN1KNbeudoub0B/5i0hHOBuSXHt9FT
      207FDbOX1mM+Eo1J/PiFN/nMPevpd4/wtcf2oygKigJ/88BGsie4W03XoB9HxwXM20bQlmzj
      kNbA1pJtVHW2c6anm4NtzdgNRoKxKMFYjPev+xT86Yvo1z6KkFqA6CxBEASUQD+i5dJgty/g
      J8s6t1r0OSkAKS4RdPvVYLdJ8vzBeravLqYwM4XCzBSMei2lOQ4GfUG+/cwxPnP3OoqyrjzD
      euJ8N2tyzQixanTLv8SRV7/CX1z/RZ6uOccn1m8iGI8RkySMWh39AT/PNjfxwZu/jlT3B6Sa
      Z9Bkr0SwpCHYs0cHxwC9fh/r8+bW8tU5ubFtX30nmRW5M5rEdr7T1uflXEs/O9dd8rCsKMnA
      bNRRkJHC5x/czA9/f4LuwSvv4niqrpNKZwu6pXfRMHSBfEchB1o7uLG0HK1Gg91gxGW2YNHr
      KXa6WJKRwZ6BEQybP4vprv8CKYriacd401fHlNs/EpjyJY3XylUJIBpJ7CEsSRIoCvH41KZR
      76huJm8WkrrOV6JxiZ+88CafuHEx8cZGwrW1hOvqCB4/RqytHiUSIMNh4eN3rOHxV2veMVyl
      3z2C0tuN3dyJbuk9vN7wMitzt+INh6hIS096zqb8Inr8fto8bgRRxLDlLzFc9zkE7aVxR4/f
      h6IwZQmtpoqr6gL5vG6a27pJz3BhUOKY0vJxWKfmwsL+ELIkT2pfrYWMJMv84Nkq1rWcQvfr
      o4xkZ4ESQG79I/osDeQWEw0HMN//I8pynWg1Auc7hlhckDzp2QuH6rk1swNt2Xb88QjuoJua
      viA3l4+fVl4QBO5ZuoInTr/Jx9ZuRP9nnp6RaITfnTvDwyvXTPn1XytXJQCDXgcKxKJBBv1R
      1hUapiwYrvV4A7kri2Y9SGpeoCj87KVqXDXH2XnnVoxr1hCv+wNywwG0H/kSYv5GELXEqp4g
      +PKXMdz6Lzx84zK+97vj/O8Pv2d0dvYtAsEIDbUtPJhTi2bZdznTdYqglE1BaioZ5nfOxmbR
      atmUV8BL52u5Y9HSMd8dam1hc34Rdv3UbEc7lVyVADweLyaTCXtqGgVZOvrdPjKnIBguHonR
      39jNdR+/ZcZ2NZyvyLEYv3vmDYYDAa5/3yJarArlB78JgOne/x7T/dBs/iDhl79GvOoxsrZ8
      lLWLcnjlRAt3bqkYU+arVbXsyB5Gl7scrdVF2/khlmVvYHtJ+YTGY5U5eZzs6SIsSVgNBuSL
      L8PG4UF2lFWgmcVcpeNxVRblF5WyYsVSstIzMNoco5X/Wmk5dp7CtWVq5b8CUizGU796mbNh
      gZTFXfS17ib+wl8TTV+EYfuXxlR+SHRRjDf9L6T2/URrD3LX1kUcPdcxJto3Eopw7HQLm/RV
      6Nd+GIA2b4AN+YUTdkYIgsCyzGzqBvrwhEN878gBDrQ2U+JwzcnKD3PAC9TX0EXr8QZajtYz
      cKF3VnY0mS8oikKopoanv/kLDsf7+Pu7F/GR8BC7NHoiO77MC5EAMSl5gilBq8e06+tE9v8H
      DPXxF/es5we/O45vJIIUj7N793G25IXRpWYi2nPwR/wEotpJ5+JZkp5J3UAfVR1trMvNp3Fw
      gA35c8v1+XYEZQpXsEiSNOkuUCwUpfN0C5FgmPL3LJ+WXdvnO+d6znCgeS/Wph5W1of5vnkF
      f7WmgeLQIPoNH0eTvxFQeOz4z+jytKPXGshNyacsvYJ1+RvHvMFj535H4KXfYL7336j2Kfzh
      j0eJW2w40lL5hPE3pO78IhpnCdVd56jpD/LB1ZenKL8SP6o6TFyS+MymraMzxnOVWZ8I05n0
      FG9Sk1uNhyRLPF39BI8W3ou+5U803/0IWw88RnnuKnQrH0QQ33qEAh/e8HEA/BE/XZ4OXj3/
      EgIC6wo2jpanXXoPxo4TeH/xvym2LOfvFpVi2bUD0d9IrCYNzcX8PU1DwyxJT75105Uod6Uj
      CsKcr/wwBwSg8s5UtR1GJ+age2Y3jp2LeGXvPj730b9GnzF+nJTNYGNx5lLyUvP51hv/SmXu
      WrSaxKMWBAHjjf+IEv4Cgm4AMd2FfOZnRNsOYbr9WwAMjgRodo9w25KrW/T0nuLSeZOuae5L
      9F1GOB7jsZPHibyDO1Ah4d+/MHiBP9Tup7QmhKRrZahtD52GDJ5ra6eqs33UyzIeVoONjUVb
      ePHc71C4dKygN2O++/sYtv4NmowlaHLXYr7/54gp+cQliZ+/eZC1OdarTkqlFcU5O+j9c2Z9
      DLCQUIA/1NYktvlRFO5fvgpBEEbF0On1cKyjjUA0wlBwCK0gkhlS2LH7xwyusHE4/dPkp2ey
      Y00xe5ub8EfD3L+8kv6Anxb3MBvyCmj3uHFZLNgNCU+QLEt8Z/83ubH8ZlblXnki6lBbC0+d
      +jX/dtvfjkZ1vptRBTCNRCUJdzBIRIoTiEZodQ/jDoV4/6o1/KHuHJlWKxXpGfzq1AnMOh3x
      uJ9gpA5/uJ/Vuau5a+k9+H76OfR5FnrW/zVf+eVhfvDZO7Fe3ABjT3MTgUiYDq+HwlQnDUMD
      uMxmDBotD66oHB38jkRH+PfXvsI/3vQ1jLrxw6Kj8Tj/se9Fssw9fGLzZ2bkHs026hhgmghE
      Ijxx+iROsxmTTodZp6c8LZ2iVCeCIHDH4qX8uvoEVZ3t3L9sBbW9RznWdph7Vz5IfmoBdoOd
      8MGfoC9yYtz5ZXSDAZZmZ45WfoAbikt5vraG2xYtpcjhZHssilmn5zenT9LmcY+6MC16Czsq
      bmH3+T9y1/L7xrX5eFcHQ4Ea7l/+3mm/P3OFq2oBfO5B3CMx0p0pmAxaAiEJm9WktgAXURSF
      Hx8/wi3li9/Rjx6OxTjd08D+xt9Rml7OncvuRafRoygyseoniJ7bg+XhH6KIWr72y3185LbV
      FGReOWGxOxTkN6dPUp6WTrrFSmGqA7tBz9de+Sf+dvuXsBvHTlzKsoQ/EuCxU9X0DL/I12//
      j3nhwZkKrkoAgYCfjrZ2DBYT8VCIgvIlGDSCKoCLnB/sp2lokNv/LCbm7XjDHv5U9wLNg018
      YO2jFDqLAVDCXiJ7/p1gdQMpn/oRosPFM/vqkCSZh3csn7ANcVmmfqAPXzjM6d5uPrxmPc2D
      9bx6/iX+6j1/RzA2wvn+Omp7a+hwtxGWLEQVKxvzMnjvygev+R7MF65KAJ1tF9Bb0wi4e/EH
      wixZsRKtoCBJ0qzuTTtX+PnJKt67bCUphuT9bUVR+I/Xv8rNS26nMmctoiAi9Z0lXv9HYuf2
      EWp1kPrJryIXFPGTF0+SYjXx/p3LrzpXa4vHzWtN57lv2UqOtLzK4ZYDuKwuFmcsZWnWClzm
      bB4/fYoHV1SSajQumLc/XKUAmhvriaEnKzMNm9mAJxDFmWp717QAcUlCVhS0Gg2SLKMVxQnH
      wzQPD/FmVwcPrKgc95h9TW8wMNLP/aseRomFE5kVPP2ELhhRNFk4PvQoXbKOn7x4kls3lHHd
      ymsPJej0enjpfB2yIhOOR8m6uPeDVtQwEAiws6yC8nHi/d/NLDgvkKwodHo9OE1mrIZL+YYi
      8ThnertpGR5iKBREIwgoQCgW4+ayRSzNHDsppCgKnnAIWVGwGQzoNVpiksT/nDjKB1atxW5M
      /vb3h318a8+/8qWbvoou5CG8+5/RlNzMm3/qps3ggFWVdA36icTifOiWVeRnTN0mJYqigCAg
      yzLecJi4LKEAJp1u1G260HjXC0BRFKp7ujg/0E9EihOVJOwGI+5QkKUZWWwqKOJsXw/H2ttY
      mZ1DuSuddIvlbS7EKI+dPM4nN2wendwJXNyy0xeJkGI0MhwKcl1BCUcb2wn4YuRaHESiccIx
      iZFQlGFfiBSrAbNBR0/oPOvKc9hh8CGdfZbBJZ/kycM+rOku1i3JxWzUkZFqIdtlVZeEzgDv
      egHU9HZT09vDjrIKDBotOo0Gi15PXJY52t7Kia4OlmRksq24FKM2ecKmPc2NhGIxthYW4wmF
      eKmhjnUZBejiOnzBCMfOd9I96GdFUSaFWak4bUaMei16nQadTiEc99M63MaRhn1ktjQj6dbS
      TTYCOsT2Th5533Yq1ow/YFaZPua0ABRFuTSFryT+EoWJ98eHg0F+W3Mq6TK9t5AVGVEQ6fF1
      8/iJn1NgLyDHWUB+agHp1kw0ogZR0HKyu5OGwQEsOj3N530EfHGWFKZhtxgpzExhcZ4dQZFB
      1KAg8KvjP6XD3YIWAZscJ2ewgXVynMzVj6BbcT+SN8DQ9/8b2623YF6/LqltKtPPnBVAp6eD
      p079mmB0BAQBAYhKUTJt2dy65A5KXGOzC8ty4jIEIRHwpSgKT9VUsym/kMIrxLTHPB5e/PXX
      yOmNYh4O0GsM0ppnYLgim7BWZFHGEu5b9TAiWr79zFHKsu3cuTYLue8cUn8dcn8tSsSPEg8j
      6MwMB4eISTEy7NkIohbBaEdbsh1tyQ0IOhOxrm6GfvRjHB/+IIbS0im5XypXx5wSgCLLhKqq
      CNbUcKxpP0Xla6nY9QDanJzRSt3haeNXx3/GriV3sjpvHZKs8NLRRo6c6xx1E6almFm/MpvW
      0AAfqEz+dlXiceK9fYRrz9H0p2fIuvl2nNl6pManQBFQZBnZ70ewWGj2tmMxp/H72EPke/dz
      e2GQmEbPoMVFm8aA2+xEMTmQFBlf2MvQyAB/d+M/X5ZFWVEUwjVn8T77LK7PfBpd1sykmFcZ
      n1kXgOTxEDxWRbStjXj/ALr8PB43nOWhle/DFoHAnr2IBgP2e+5Gl5vYNTAUC/LDQ9/ForcT
      6KwkLz2F2zdXYDHqiEsy7X1evvvCEVxmCw9uW0ZZnnN0ACuHQvj/9DLhMzVos7Poc2jYbW7g
      00YzSiyE4fq/RbQmspkpsky0oZbzz73IE7EMli510mE+iKi3IisymbYsStLKSLdmohU0IAjY
      DHYybJnoNWMjKRVFIfDqa4RranB+6pNorGrWi7nArAsgXFeHNDiErrgIjdXGaX8DZ3qqeXTD
      J0aPiTRdwPPkk1i2bMGy/YbR1uDbv3udxuEz/OWdt1CWVoH24uKQYCzML0++yW1Fy3npSCOd
      gz6Ks1LJcVgQX3ye1IoScm/Zgdao4Zd7f8SugaOUbvsMhrIdSLI8Wn6/e4Q9p1pp7fXwwZXp
      WF98Dt31mzBdtwXTJCIl5cAIvhdfRPJ4cX7iYwhzzFGwkJl1AbydqBTlX3Z/mb+78R+xGsbm
      sVRiMYZ//gu0mZnY77qTxs5hnt5by2fuW8bTJ3+F1HuGYrMLoyLj6Wvign0JaXkF7Fp2L4os
      4u0a4fxjTyHtup0u7yD1zdXk+QYwZCxCcZbjD0aRJBmERDw7AjisJrasyKeyLBONKCJHo3if
      +A1yKIzjwx9ENJvf8XrkcJjAK7sJnTqFZft2LNdfh6DOlM8prkoA8WiYQDiOXitiMuoIBOPX
      HAynKArPnn4Sp9nFjRU3Jz9Glhn+0Y+hrIJvNEX53BYNDn8tUm8NYkouorMEdGb2dfezWeil
      p+Mop6QoHVoD2wcdmF2pdNmCSO4WVluzSF33EbQVtyKMs+PJeARPvInvD3/AumMH5g3rEYzG
      0VaDWIxYdzcjhw4TbWzEcv11WLZtQ5hjacFVElyVAIYG+hlwuzHqdcTCYfLLFmPQJGYYJxsL
      1OFpo8vTQdNgI/6Ij09t+csxsSiKotAT8NPuGWZDXiG42/mvbz3Jspw+rl9dhLZwM2JaOYIx
      kfS12+fl1aYGPrxmPUo8jNxdTXD/71FELcbVGxANNsSUvIRYriHmRQ6FCLyym/C5WpAkBIMe
      JRIFjQZtRgbmjRswLFuqdnfmOFf1WnKlZzDscSPHo4yEYmjEROWX5clvXaoVdQSiAcrTF7E+
      fxMoCd88QGDEywt1NejkMHZfKy3VHXRc6EJZ/AFWNB9Es+YTdIZD1LR0kmocItNq4/XmRh5Y
      UZmwRdQjmUoZOa8n/X99EcFkGv1dWQGUa9hq1WDAetedWO+6E2QZJRpFMBjGZENO/IS6netc
      5qpagO6OVgbdfnILCnBYDbj9MVyOqQmGUxQF2d9D+NQTxDpPoDc7EPRmxIwlVIdd/OioxIbr
      cihra8XW3Er7nbtYnZPHSDRKj99HltVOZU7CWySHIwx861s4PvAB9MVF12SXyruTOTUIVqQY
      kcP/hbvjNNrVH8BZcSMajTbRDRoK8J1njvGZe9aR5jDR6hkm80+7MRXkY73xxstt8XoZ+q/v
      Y731Zszr1JnWhYgix4j7zyFojAgaK6IhHUHUw9tyVswJASjxCPGW/QTffIwz1uVs3PV5RERe
      e7OZ2tYBhn0hZFnhL+5dT166/W3nxen/t3/H+dGPosu9lCZE8vkY/M//S+r7HsawSM05tBBR
      FImR5m8hiGYEjQk57kOO9KAx5mHMuheNMT8RYTDbAog2vkbPwf+mVl9IU8YWHth0CxpJ5NtP
      H2P94hw2L88nPcV8WSbjt4j19DD0vR+Q8uADGBYvItrSgufxJ3A88giGRRVJz1F59xPs+DmC
      NgVT9qX1zYqiEA/UE+r4Gaa8R9DZV82+AM52t9MVGGF1Th5OswWvP8w3fnOYT921lpIcx8R+
      1+PB+/zviXf3oHE6SbnvXrTpC29xh0oCKdROsP1/sFV8dYxT4i3kmJdA41ewVnx19gXwdjyB
      MP/++EE+cccaSnMnl5RVRQUuhpw0fhVT3qNozUXjHhfzVhPufW7upEUJhKJ84zeH+MiuSrXy
      q1w1Me9xRH3GO1Z+AF1KJXLcMzcEEAzH+OaTh3lo+3IWjbN1j8r0k+gMyCjxANGhvShKHFGf
      hqAxIwgaFDmCIsfROzYhiLqL50jE3EeRwl2Jc6UwgtaKqLUh6ByI2lQQ9SQmeKIoUhAEzcVj
      7CDoQJFQ5AiiPg0E7YTWeyiKcmn2HQUQQI4S6n4SW8VXJnS9BtcNs98F6uj38v3fHeeBG5ay
      dpG6MfZ0oSgSUrAFBBFR50LQmEi4AxMVSI65Cfc8jRRsR9AY0Tm2IGrtyDF3otIqcRCNKHEv
      Md8ZRK0VEFAkP1rbKrS2ZQiCCIgochQl7k+cG/egyFFASLggRQMJkQVR4l4UJY4gaFHkMIoc
      BkREvQtB0AIKihRGUWIghxG0qYmypRFQYiRS2yoociwhSEXGkHErhrSdE74vsy6Aps5hbBYD
      mY53fx7KmUBRZFAkEhUjgjTSSNR7AinQgGjMRhCNyLHhRKVGAITEIiKNBUP6LnQplXCF3M6K
      IoMcBRKz7YnKOkX2yxHk6HDiGgQBQTSCqAM5jqLEEETDxRZJd3G1oJBoMS4u+J8sVyWAvq52
      /FFwpdqwGjX4olpcKeY5uSZ4LqMoysXKKl+MSxK4VPmUxEPlYrdECqPIIZBjgHLx3NjFN60H
      OdKDFGpHjg2BoAVEBFGPxlyCLmU1WusSBEF9Nn/OVQngwoULaICoHMEfiLN69UoUSUJRlDEi
      mMjfcd9pJN+xKbqc+YSMFO5BlqKJNyriaCChosgIgphIky7JiKI2MZmjaNHoTAgIxCUZrc6A
      oLWhCDZ05lw0pgIUTSqai3sBTPZZzJW/DQYDkUhkRn7zqgRQX1cHgMFsQoiGcOaXYTfqrqoF
      kOMB5OjgZE14V6AxZCBo3nlNgcr0clUCCI/4CETBZjZgMOgJBkOYzWoXSGX+MeuDYBWV2URd
      n6eyoFEFoLKgUQWgsqBRBaCyoJnyWKApHFOrqEw7Uy6Aq1kY/05lTfWOM1Nd5nywcTrKnA82
      TqTMKRXAVLtABUGY8hsy1WXOBxuno8z5YONEypzSeQAVlfnG3BkEB4do7vEiy3IiNcrFfwHO
      nzrEUBCaztfS2Nw24SLbm1uIva2st/6NBv2cr6+nrauHuprTXGjtmFB5tTWnaG7rvFiWQk9v
      z2iXb3igl7qGZkDh3PHD+GITs9HX00VDRw++gR5qmlpHbXzrv/CIjzerz074ms9VnyAYVzh3
      /Aje2J9fO/R1t9PU2o57sJf6+vNE4lcoMDjE8XMtxIPDVFXXJ7Jmv82+S/eyb/Q5TYSutga6
      +txjnot88Xmfqq4GoPZMNW2dvRMrUJGoqnoTUC67h37PEPV15+jp6eH0mRo6egZGT5sTC2IA
      kKOMBMO8vvsQOWXLCQ62Y0pJZ/mSReRmpeGXQavV4AkESISOXZlQMIh3uJfD+w6yctUahqMy
      KSYTpUV5iHKYeFhBn1IAMfeETAyHQ5hTRY4f2kNvAMrz0+hu72L5+nU407MYdDfi7u9G1BqI
      yhcXaVyBWCROWJYYigvolTjVVQcZEWzYNVFyy5aSlmrHZjZcsZy3sKTY6e3sIBQYIRTwcvjw
      XhaXL6bdK7Nl7VIycwrwNZ6nq3MQrV6HLxAiPdU0foFylEAoQmevlxSzSH3Nm7QPx8hzmXBm
      FZKd4UzcS0kZfU4TIRgVIDrIBXcPsXCQuNaGxmRgaWkRZksiNF6j0xAIBCZU3nB3Oza7FU84
      TMOpGsypqcT8wxQuWoHTaiUcDKBEFAqWr8DddgFIrBmfEy2AHAtxtrEDsxIiNbcYORYiMzsP
      m8UAxGlt7aSrsxONRkskHGEifbaAdxh3KIJ3cJjSwmwCYYnC0nK0YpyQ34OkMRGNi/j6mwnH
      pAnZaUtNoyg/B7MtlWWLyxPVWxARgIHeTjo7OwjFBYIBH16Pb8LXn2rUEJQ1CMjEZA0GnYAj
      LYu0VBsB7zCdnR0MevwTK0xjINDfgSsnj8GBAQrKiokEQhSWlKETE0nNOjq6sdhsyCjEoldu
      qnJdFvr9UUQgGI1jNxmwpDrJznBeupdh/+hzuhJSaJghT5Ahtw9JUZAQ0Gr1lJUWATDQ3UFn
      bx9aUUckHJ7QZfd7/Gg1An2dHciShEarxZmRgzPFgsfrxWSxIeoVms/WIImXUterYwCVWaWv
      t4/MrMwpLDFGX6+PzCzXhI5WBaCyoJkTXSAVldlCFYDKnOYtT85UHffnzB0vkMq858Abu9Fo
      teQtXkd++tgdfi6lMIHD+99gUeUmGk4dRdBqyCpZSVF2IgtgQ2MDFeUVo+cc3PMKmTmFDHu8
      aIxWRgY70VrTSbdquNDWx7oNKzhw5DQ3bFzJ8dNN3HrztknZrApAZcrwh2Lcdtt2/vjSa5z0
      9RExpmMx6NBrBbZvWsbv3ziD1ayhpamBxZWb8IyEue32Xfzxjy9z7tAgXmz4Bro5d/Y8zY21
      fOAvvoDOZKNi0WJOHz9IXPIQJA1lqI81S9ZTc74DZ3oOxI7gyswlxTKx+Zy3o3aBVKaMWNjP
      kYP7yM3NwiPZMem02DQ+UrPLGM1BJOopKCrClWJBjgQ5emg/WXk5DAf1WI0G8nMzETQGtt64
      E7s+UT37Gqo4cn4IV0YBEXcLkqjnN088SWFhHgPdnbS3t9M75L0qm1UvkMq0cmT/PtZetw39
      Vb5qT584giOnjIKcd052PNTbyfm2AbZsXD2p8lUBqCxo/h/2lrOsR0o+bwAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 3' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
